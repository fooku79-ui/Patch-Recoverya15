name: RECOVERY
on:
  workflow_dispatch:
    inputs:
      RECOVERY_URL:
        description: 'RECOVERY URL'
        required: true
        default: 'https://transfer.sh/(RECOMMENDED)'
env:
  RECOVERY_URL: https://oshi.at/Rpjg
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check Out
      uses: actions/checkout@main
      
    - name: Prepare the environment
      run: |
        sudo apt install git wget lz4 tar openssl python3 xxd cpio -y
        
    - name: Download and setup tools
      run: |
        # Download latest Magisk
        wget https://github.com/topjohnwu/Magisk/releases/download/v29.0/Magisk-v29.0.apk -O magisk.zip
        unzip -j magisk.zip lib/x86_64/libmagiskboot.so
        mv libmagiskboot.so magiskboot
        chmod +x magiskboot
        
        # Download avbtool
        wget "https://android.googlesource.com/platform/external/avb/+/master/avbtool.py?format=TEXT" -O avbtool_b64
        base64 -d avbtool_b64 > avbtool
        chmod +x avbtool
        
        # Create signing key
        openssl genrsa -out phh.pem 4096
        
    - name: Create script1.sh
      run: |
        cat > script1.sh << 'EOF'
        #!/bin/bash
        if [ -f recovery.img.lz4 ];then
            lz4 -B6 --content-size -f recovery.img.lz4 recovery.img
        fi
        cp recovery.img r.img
        if [ ! -f phh.pem ];then
            openssl genrsa -f4 -out phh.pem 4096
        fi
        EOF
        chmod +x script1.sh
        
    - name: Create script2.sh
      run: |
        cat > script2.sh << 'EOF'
        #!/bin/bash
        set -e
        
        # Use magiskboot to unpack the recovery image
        ./magiskboot unpack r.img
        
        # Check if ramdisk.cpio exists after unpacking
        if [ ! -f "ramdisk.cpio" ]; then
            echo "No ramdisk.cpio found, skipping ramdisk patching"
            # Just repack without modifying ramdisk
            ./magiskboot repack r.img recovery-patched.img
            exit 0
        fi
        
        # Extract and modify ramdisk
        mkdir -p ramdisk
        cd ramdisk
        cpio -idm < ../ramdisk.cpio 2>/dev/null || true
        
        # Add fastbootd support to init files
        for file in init.recovery*.rc; do
            if [ -f "$file" ]; then
                if ! grep -q "fastbootd" "$file"; then
                    echo "" >> "$file"
                    echo "service fastbootd /system/bin/fastbootd" >> "$file"
                    echo "    class core" >> "$file"
                    echo "    user root" >> "$file"
                    echo "    group root system" >> "$file"
                    echo "    disabled" >> "$file"
                    echo "    seclabel u:r:fastbootd:s0" >> "$file"
                    echo "" >> "$file"
                    echo "on property:sys.usb.config=fastboot" >> "$file"
                    echo "    start fastbootd" >> "$file"
                fi
            fi
        done
        
        # Repack ramdisk
        find . | cpio -o -H newc > ../ramdisk.cpio.new 2>/dev/null
        cd ..
        mv ramdisk.cpio.new ramdisk.cpio
        
        # Repack recovery image
        ./magiskboot repack r.img recovery-patched.img
        EOF
        chmod +x script2.sh
        
    - name: Fetch image from URL
      run: |
        ls
        pwd
        wget "${{github.event.inputs.RECOVERY_URL }}" -O recovery.img
        
    - name: Patch Process-1
      run: |
        chmod a+x script1.sh
        chmod a+x magiskboot
        ./script1.sh
        
    - name: Patch Process-2
      run: |
        chmod a+x script2.sh
        ./script2.sh
        python3 avbtool extract_public_key --key phh.pem --output phh.pub.bin
        python3 avbtool add_hash_footer --partition_name recovery --partition_size $(wc -c recovery.img |cut -f 1 -d ' ') --image recovery-patched.img --key phh.pem --algorithm SHA256_RSA4096
        mkdir output && cd output
        mv ../recovery-patched.img recovery.img
        tar cvf fastbootd-recovery.tar recovery.img
        md5sum -t fastbootd-recovery.tar >> fastbootd-recovery.tar
        mv fastbootd-recovery.tar fastbootd-recovery.tar.md5
        
    - name: Upload Recovery
      uses: actions/upload-artifact@v4
      with:
        path: output/*.md5
        name: Patched-Recovery
