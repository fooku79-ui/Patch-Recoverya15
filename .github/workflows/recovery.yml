name: RECOVERY

on:
  workflow_dispatch:
    inputs:
      RECOVERY_URL:
        description: 'RECOVERY URL'
        required: false
        default: ''

env:
  # Fallback if no input given
  RECOVERY_URL: https://oshi.at/Rpjg

concurrency:
  group: recovery-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Check Out
        uses: actions/checkout@v4

      - name: Prepare the environment
        run: |
          set -euxo pipefail
          sudo apt-get update -y
          sudo apt-get install -y git wget lz4 tar openssl python3

      - name: Resolve RECOVERY_URL
        id: url
        run: |
          set -e
          if [ -n "${{ github.event.inputs.RECOVERY_URL }}" ]; then
            echo "URL=${{ github.event.inputs.RECOVERY_URL }}" >> "$GITHUB_OUTPUT"
          else
            echo "URL=${RECOVERY_URL}" >> "$GITHUB_OUTPUT"
          fi

      - name: Fetch image from URL
        run: |
          set -euxo pipefail
          echo "Downloading: ${{ steps.url.outputs.URL }}"
          wget -O recovery.img "${{ steps.url.outputs.URL }}"
          ls -lh recovery.img
          [ -s recovery.img ] || { echo "ERROR: recovery.img is empty"; exit 1; }

      - name: Ensure key exists
        run: |
          set -euxo pipefail
          if [ ! -f phh.pem ]; then
            echo "Generating phh.pem (4096-bit RSA)â€¦"
            openssl genrsa -f4 -out phh.pem 4096
          fi

      - name: Patch Process-1
        run: |
          set -euxo pipefail
          chmod a+x script1.sh || true
          chmod a+x magiskboot || true
          ./script1.sh || true
          ls -lh

      - name: Patch Process-2
        run: |
          set -euxo pipefail
          chmod a+x script2.sh || true
          ./script2.sh || true

          # Use the repo's avbtool executable
          chmod a+x avbtool
          ./avbtool extract_public_key --key phh.pem --output phh.pub.bin
          ./avbtool add_hash_footer \
            --partition_name recovery \
            --partition_size $(wc -c < recovery.img) \
            --image recovery-patched.img \
            --key phh.pem \
            --algorithm SHA256_RSA4096

          mkdir -p output
          mv recovery-patched.img output/recovery.img
          (cd output && tar cvf fastbootd-recovery.tar recovery.img)
          (cd output && md5sum -t fastbootd-recovery.tar >> fastbootd-recovery.tar)
          mv output/fastbootd-recovery.tar output/fastbootd-recovery.tar.md5
          ls -lh output || true

      - name: Upload Recovery
        uses: actions/upload-artifact@v4
        with:
          name: Patched-Recovery
          path: ${{ github.workspace }}/output/*.md5
          if-no-files-found: warn
